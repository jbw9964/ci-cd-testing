plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
//    id 'com.palantir.docker-compose' version '0.33.0'

    // sonar cloud 분석 위한 plugin
    id "org.sonarqube" version "5.1.0.4882"
}

sonar {
    properties {
        property "sonar.projectKey", "jbw9964_ci-cd-testing"
        property "sonar.organization", "jbw9964-1"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}


group = 'core'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
    ignoreFailures = true   // test 실패한거 있어도 OS 에 0 코드 제공
}

//dockerCompose {
//    dockerComposeFile '../docker-compose.yaml'
//}

// plain snapshot 생성 X
jar {
    enabled = false
}
